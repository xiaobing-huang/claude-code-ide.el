name: CI

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: jcs090218/setup-emacs@master
        with:
          version: 30.1

      - uses: actions/checkout@v4

      - name: Print emacs version
        run: |
          emacs --version

      - name: Check for trailing whitespace
        run: |
          if grep -r '[[:space:]]$' *.el; then
            echo "Error: Trailing whitespace found in Elisp files"
            exit 1
          fi

      - name: Format check
        run: |
          # Format all elisp files and check if anything changed
          for file in *.el; do
            cp "$file" "$file.orig"
            emacs -batch -L . --eval "(progn (require 'transient nil t) (require 'claude-code-ide-mcp-server nil t) (find-file \"$file\") (emacs-lisp-mode) (setq-local indent-tabs-mode nil) (setq-local lisp-indent-function 'lisp-indent-function) (indent-region (point-min) (point-max)) (save-buffer))"
            if ! diff -q "$file.orig" "$file" > /dev/null; then
              echo "Error: $file is not properly formatted"
              echo "Differences:"
              diff -u "$file.orig" "$file"
              exit 1
            fi
            rm "$file.orig"
          done

  compile-check:
    runs-on: ubuntu-latest
    steps:
      - uses: jcs090218/setup-emacs@master
        with:
          version: 30.1

      - uses: actions/checkout@v4

      - name: Print emacs version
        run: |
          emacs --version

      - name: Check byte-compilation
        run: |
          # Use the same script as Claude hooks for consistency
          .claude/compile-check.sh

  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        emacs-version:
          - 28.1
          - 29.4
          - 30.1
        experimental: [false]
        include:
          - os: ubuntu-latest
            emacs-version: snapshot
            experimental: true
          - os: macos-latest
            emacs-version: snapshot
            experimental: true

    steps:
      - uses: jcs090218/setup-emacs@master
        with:
          version: ${{ matrix.emacs-version }}

      - uses: actions/checkout@v4

      - name: Print emacs version
        run: |
          emacs --version

      - name: Run core tests
        run: |
          emacs -batch -L . -l ert -l claude-code-ide-tests.el -f claude-code-ide-run-tests

      - name: Run all tests (including MCP)
        run: |
          emacs -batch -L . -l ert -l claude-code-ide-tests.el -f claude-code-ide-run-all-tests

  # This job is used for branch protection rules
  # It passes only when all required jobs pass
  ci-pass:
    if: always()
    needs: [format-check, compile-check, test]
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all required jobs succeeded
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
